server.port=8001
spring.application.name=dcloud-account

# ??????
spring.cloud.nacos.discovery.server-addr=101.42.236.154:8848
spring.cloud.nacos.discovery.username=nacos
spring.cloud.nacos.discovery.password=nacos

# ????
spring.redis.client-type=jedis
spring.redis.host=101.42.236.154
spring.redis.password=!Aa18760120328
spring.redis.port=6379
spring.redis.jedis.pool.max-active=100
spring.redis.jedis.pool.max-idle=100
spring.redis.jedis.pool.min-idle=100
spring.redis.jedis.pool.max-wait=60000

# ???????, ??????ds0
spring.shardingsphere.datasource.names=ds0

# ??? ds0 ??????
spring.shardingsphere.datasource.ds0.connectionTimeoutMilliseconds=30000
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.idleTimeoutMilliseconds=60000
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://127.0.0.1:3306/dcloud_account?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.ds0.maintenanceIntervalMilliseconds=30000
spring.shardingsphere.datasource.ds0.maxLifetimeMilliseconds=1800000
spring.shardingsphere.datasource.ds0.maxPoolSize=50
spring.shardingsphere.datasource.ds0.minPoolSize=50
spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=Aa18760120328

# ???????sql ? ??????sql
spring.shardingsphere.props.sql.show=true

# ????? traffic ??????
spring.shardingsphere.sharding.tables.traffic.actual-data-nodes=ds0.traffic_$->{0..1}
spring.shardingsphere.sharding.tables.traffic.table-strategy.inline.sharding-column=account_no
spring.shardingsphere.sharding.tables.traffic.table-strategy.inline.algorithm-expression=traffic_$->{ account_no % 2 }

# ????????????id
spring.shardingsphere.sharding.tables.traffic.key-generator.column=id
spring.shardingsphere.sharding.tables.traffic.key-generator.props.worker.id=${workId}
spring.shardingsphere.sharding.tables.traffic.key-generator.type=SNOWFLAKE

# ??????
sms.app-code=fed2556097d14ee896c9351864275dd3
sms.template-id=M72CB42894

# ?????????
aliyun.oss.endpoint=oss-cn-beijing.aliyuncs.com
aliyun.oss.access-key-id=LTAI5t84vZUn7x81Eob3UwR5
aliyun.oss.access-key-secret=5bMhe1n8fM41VlMj7JrjW3OYFn3sNS
aliyun.oss.bucketname=bitdeer-ryan

#----------\u77ED\u94FE\uFF0C\u7B56\u7565\uFF1A\u5206\u5E93+\u5206\u8868--------------
# \u5148\u8FDB\u884C\u6C34\u5E73\u5206\u5E93\uFF0C\u7136\u540E\u518D\u6C34\u5E73\u5206\u8868
spring.shardingsphere.sharding.tables.short_link.database-strategy.standard.sharding-column=code
spring.shardingsphere.sharding.tables.short_link.database-strategy.standard.precise-algorithm-class-name=net.xdclass.strategy.CustomDBPreciseShardingAlgorithm


# \u6C34\u5E73\u5206\u8868\u7B56\u7565\uFF0C\u81EA\u5B9A\u4E49\u7B56\u7565\u3002   \u771F\u5B9E\u5E93.\u903B\u8F91\u8868
spring.shardingsphere.sharding.tables.short_link.actual-data-nodes=ds0.short_link,ds1.short_link,dsa.short_link
spring.shardingsphere.sharding.tables.short_link.table-strategy.standard.sharding-column=code
spring.shardingsphere.sharding.tables.short_link.table-strategy.standard.precise-algorithm-class-name=net.xdclass.strategy.CustomTablePreciseShardingAlgorithm
#id\u751F\u6210\u7B56\u7565
spring.shardingsphere.sharding.tables.short_link.key-generator.column=id
spring.shardingsphere.sharding.tables.short_link.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.short_link.key-generator.props.worker.id=${workerId}
